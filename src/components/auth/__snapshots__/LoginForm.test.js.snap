// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginForm /> renders correctly 1`] = `
<LoginForm
  dispatch={[Function]}
>
  <Form(t)
    className="Form"
    onSubmit={[Function]}
  >
    <t
      className="Form"
      getValues={[Function]}
      hideError={[Function]}
      onSubmit={[Function]}
      showError={[Function]}
      validate={[Function]}
      validateAll={[Function]}
    >
      <form
        className="Form"
        onSubmit={[Function]}
      >
        <div
          className="Form__title"
        >
          Login
        </div>
        <div
          className="Form__external-login"
        >
          <Connect(GoogleLogin)>
            <GoogleLogin
              dispatch={[Function]}
            >
              <e
                accessType="online"
                buttonText="Sign in with Google"
                className="Form__external-login__google"
                cookiePolicy="single_host_origin"
                disabledStyle={
                  Object {
                    "opacity": 0.6,
                  }
                }
                fetchBasicProfile={true}
                icon={true}
                isSignedIn={false}
                jsSrc="https://apis.google.com/js/api.js"
                onFailure={[Function]}
                onRequest={[Function]}
                onSuccess={[Function]}
                prompt=""
                scope="profile email"
                tag="button"
                theme="dark"
                type="button"
                uxMode="popup"
              >
                <button
                  className="Form__external-login__google"
                  disabled={true}
                  onClick={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgb(66, 133, 244)",
                      "border": "1px solid transparent",
                      "borderRadius": 2,
                      "boxShadow": "0 2px 2px 0 rgba(0, 0, 0, .24), 0 0 1px 0 rgba(0, 0, 0, .24)",
                      "color": "#fff",
                      "display": "inline-flex",
                      "fontFamily": "Roboto, sans-serif",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "opacity": 0.6,
                      "padding": 0,
                    }
                  }
                  type="button"
                >
                  <Component
                    active={false}
                    key="1"
                  >
                    <div
                      style={
                        Object {
                          "background": "#fff",
                          "borderRadius": 2,
                          "marginRight": 10,
                          "padding": 10,
                        }
                      }
                    >
                      <svg
                        height="18"
                        width="18"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          fill="#000"
                          fillRule="evenodd"
                        >
                          <path
                            d="M9 3.48c1.69 0 2.83.73 3.48 1.34l2.54-2.48C13.46.89 11.43 0 9 0 5.48 0 2.44 2.02.96 4.96l2.91 2.26C4.6 5.05 6.62 3.48 9 3.48z"
                            fill="#EA4335"
                          />
                          <path
                            d="M17.64 9.2c0-.74-.06-1.28-.19-1.84H9v3.34h4.96c-.1.83-.64 2.08-1.84 2.92l2.84 2.2c1.7-1.57 2.68-3.88 2.68-6.62z"
                            fill="#4285F4"
                          />
                          <path
                            d="M3.88 10.78A5.54 5.54 0 0 1 3.58 9c0-.62.11-1.22.29-1.78L.96 4.96A9.008 9.008 0 0 0 0 9c0 1.45.35 2.82.96 4.04l2.92-2.26z"
                            fill="#FBBC05"
                          />
                          <path
                            d="M9 18c2.43 0 4.47-.8 5.96-2.18l-2.84-2.2c-.76.53-1.78.9-3.12.9-2.38 0-4.4-1.57-5.12-3.74L.97 13.04C2.45 15.98 5.48 18 9 18z"
                            fill="#34A853"
                          />
                          <path
                            d="M0 0h18v18H0z"
                            fill="none"
                          />
                        </g>
                      </svg>
                    </div>
                  </Component>
                  <b
                    icon={true}
                    key="2"
                  >
                    <span
                      style={
                        Object {
                          "fontWeight": 500,
                          "paddingBottom": 10,
                          "paddingLeft": 0,
                          "paddingRight": 10,
                          "paddingTop": 10,
                        }
                      }
                    >
                      Sign in with Google
                    </span>
                  </b>
                </button>
              </e>
            </GoogleLogin>
          </Connect(GoogleLogin)>
        </div>
        <hr
          className="Form__separator"
          data-content="OR"
        />
        <div
          className="form-input"
        >
          <label
            className="Form__label"
          >
            Email or Username:
            <Control(s)
              data-cy="login-email-input"
              name="email"
              onChange={[Function]}
              type="text"
              validations={Array []}
              value=""
            >
              <s
                data-cy="login-email-input"
                name="email"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              >
                <div>
                  <input
                    data-cy="login-email-input"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </s>
            </Control(s)>
          </label>
        </div>
        <div
          className="form-input"
        >
          <label
            className="Form__label"
          >
            Password:
            <Link
              className="Form__label-link"
              replace={false}
              to="/forgot-password"
            >
              <a
                className="Form__label-link"
                href="/forgot-password"
                onClick={[Function]}
              >
                Forgot password?
              </a>
            </Link>
            <Control(s)
              data-cy="login-password-input"
              name="password"
              onChange={[Function]}
              type="password"
              validations={Array []}
              value=""
            >
              <s
                data-cy="login-password-input"
                name="password"
                onBlur={[Function]}
                onChange={[Function]}
                type="password"
                value=""
              >
                <div>
                  <input
                    data-cy="login-password-input"
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="password"
                    value=""
                  />
                </div>
              </s>
            </Control(s)>
          </label>
        </div>
        <div>
          <Link
            className="Form__link"
            replace={false}
            to="/register"
          >
            <a
              className="Form__link"
              href="/register"
              onClick={[Function]}
            >
              No account yet? Register here.
            </a>
          </Link>
        </div>
        <div
          className="Form__buttons"
        >
          <Button(s)
            className="Form__buttons__item"
            data-cy="login-submit-button"
          >
            <s
              className="Form__buttons__item"
              data-cy="login-submit-button"
              hasErrors={false}
            >
              <button
                className="Form__buttons__item"
                data-cy="login-submit-button"
                disabled={false}
              >
                Login
              </button>
            </s>
          </Button(s)>
          <Link
            className="Form__buttons__cancel"
            replace={false}
            to="/"
          >
            <a
              className="Form__buttons__cancel"
              href="/"
              onClick={[Function]}
            >
              Cancel
            </a>
          </Link>
        </div>
      </form>
    </t>
  </Form(t)>
</LoginForm>
`;
